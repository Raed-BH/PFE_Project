# Generated by Django 4.2.1 on 2023-06-11 10:35

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Agency",
            fields=[
                (
                    "agency_id",
                    models.AutoField(
                        auto_created=True,
                        help_text="Unique identifier for transit agency",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "agency_name",
                    models.CharField(
                        help_text="Full name of the transit agency", max_length=255
                    ),
                ),
                (
                    "url",
                    models.URLField(blank=True, help_text="URL of the transit agency"),
                ),
                (
                    "timezone",
                    models.CharField(
                        help_text="Timezone of the agency", max_length=255
                    ),
                ),
                (
                    "phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        help_text="telephone number",
                        max_length=255,
                        region=None,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Route",
            fields=[
                (
                    "route_id",
                    models.AutoField(
                        auto_created=True,
                        help_text="Unique identifier for route.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "short_name",
                    models.CharField(
                        help_text="Short name of the route", max_length=63
                    ),
                ),
                (
                    "long_name",
                    models.CharField(
                        help_text="Long name of the route", max_length=255
                    ),
                ),
                (
                    "desc",
                    models.TextField(
                        blank=True,
                        help_text="Long description of a route",
                        verbose_name="description",
                    ),
                ),
                (
                    "agency_id",
                    models.ForeignKey(
                        blank=True,
                        help_text="Agency for this route.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="gtfs.agency",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "service_id",
                    models.AutoField(
                        auto_created=True,
                        help_text="Unique identifier for service dates.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True, help_text="name of the service .", max_length=255
                    ),
                ),
                (
                    "monday",
                    models.BooleanField(
                        default=True, help_text="Is the route active on Monday?"
                    ),
                ),
                (
                    "tuesday",
                    models.BooleanField(
                        default=True, help_text="Is the route active on Tuesday?"
                    ),
                ),
                (
                    "wednesday",
                    models.BooleanField(
                        default=True, help_text="Is the route active on Wednesday?"
                    ),
                ),
                (
                    "thursday",
                    models.BooleanField(
                        default=True, help_text="Is the route active on Thursday?"
                    ),
                ),
                (
                    "friday",
                    models.BooleanField(
                        default=True, help_text="Is the route active on Friday?"
                    ),
                ),
                (
                    "saturday",
                    models.BooleanField(
                        default=True, help_text="Is the route active on Saturday?"
                    ),
                ),
                (
                    "sunday",
                    models.BooleanField(
                        default=True, help_text="Is the route active on Sunday?"
                    ),
                ),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "agency_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="gtfs.agency"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Shape",
            fields=[
                (
                    "shape_id",
                    models.AutoField(
                        help_text="Unique identifier for a shape.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(help_text="Name of the shape of a trip")),
                (
                    "geometry",
                    django.contrib.gis.db.models.fields.LineStringField(
                        blank=True,
                        help_text="Geometry cache of ShapePoints",
                        null=True,
                        srid=4326,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ShapePoint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "point",
                    django.contrib.gis.db.models.fields.PointField(
                        help_text="WGS 84 latitude/longitude of shape point", srid=4326
                    ),
                ),
                ("sequence", models.IntegerField()),
                (
                    "traveled",
                    models.FloatField(
                        blank=True,
                        help_text="Distance of point from start of shape",
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Stop",
            fields=[
                (
                    "stop_id",
                    models.AutoField(
                        auto_created=True,
                        help_text="Unique identifier for a stop or station.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        help_text="Uniquer identifier (short text or number) for passengers.",
                        max_length=255,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of stop in local vernacular.", max_length=255
                    ),
                ),
                (
                    "point",
                    django.contrib.gis.db.models.fields.PointField(
                        help_text="WGS 84 latitude/longitude of stop or station",
                        srid=4326,
                    ),
                ),
                (
                    "location_type",
                    models.CharField(
                        blank=True,
                        choices=[("0", "Stop"), ("1", "Station")],
                        help_text="Is this a 0:stop or 1:station?",
                        max_length=1,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Trip",
            fields=[
                (
                    "trip_id",
                    models.AutoField(
                        auto_created=True,
                        help_text="Unique identifier for a trip.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "headsign",
                    models.CharField(
                        blank=True,
                        help_text="Destination identification for passengers.",
                        max_length=255,
                    ),
                ),
                (
                    "short_name",
                    models.CharField(
                        blank=True,
                        help_text="Short name used in schedules and signboards.",
                        max_length=63,
                    ),
                ),
                (
                    "direction",
                    models.CharField(
                        blank=True,
                        choices=[("0", "0"), ("1", "1")],
                        help_text="Direction for bi-directional routes.",
                        max_length=1,
                    ),
                ),
                (
                    "departure_time",
                    models.TimeField(
                        blank=True,
                        help_text="Time of the departure of a trip from a station",
                        null=True,
                    ),
                ),
                (
                    "end_time",
                    models.TimeField(
                        blank=True,
                        help_text="Time of the departure of a trip from a station",
                        null=True,
                    ),
                ),
                (
                    "name",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="gtfs.service",
                    ),
                ),
                (
                    "point",
                    models.ManyToManyField(
                        help_text="Lon/Lat for insertion the stop location.",
                        related_name="Stop",
                        to="gtfs.stop",
                    ),
                ),
                (
                    "route_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="gtfs.route"
                    ),
                ),
                (
                    "shape_id",
                    models.ForeignKey(
                        blank=True,
                        help_text="Shape used for this trip",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="gtfs.shape",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StopTime",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "arrival_time",
                    models.TimeField(
                        blank=True,
                        default=None,
                        help_text="Arrival time. Must be set for start stops of trip.",
                        null=True,
                    ),
                ),
                (
                    "departure_time",
                    models.TimeField(
                        blank=True,
                        default=None,
                        help_text="Departure time. Must be set for end stops of trip with seconds.",
                        null=True,
                    ),
                ),
                ("stop_sequence", models.IntegerField()),
                (
                    "stop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="gtfs.stop"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServiceDate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        help_text="Date that the service differs from the norm."
                    ),
                ),
                (
                    "exception_type",
                    models.IntegerField(
                        choices=[(1, "Added"), (2, "Removed")],
                        default=1,
                        help_text="Is service added or removed on this date?",
                    ),
                ),
                (
                    "service_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="gtfs.service"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="route",
            name="stop_times",
            field=models.ManyToManyField(
                help_text="List of stop times associated with this service.",
                related_name="services",
                to="gtfs.stoptime",
            ),
        ),
    ]
